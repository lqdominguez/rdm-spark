package net.sf.jclec.binarray;

import net.sf.jclec.JCLEC;
import net.sf.jclec.IDistance;
import net.sf.jclec.IIndividual;

/**
 * Hamming Distance.
 * 
 * @author Sebastian Ventura
 */

public class HammingDistance implements IDistance, JCLEC 
{
	//////////////////////////////////////////////////////////////////////
	// -------------------------------------------- Serialization constant
	//////////////////////////////////////////////////////////////////////

	/** Generated by Eclipse */
	
	private static final long serialVersionUID = -5292752152678382460L;

	//////////////////////////////////////////////////////////////////////
	// ------------------------------------------------------ Constructors
	//////////////////////////////////////////////////////////////////////

	/**
	 * Empty (default) constructor
	 */
	
	public HammingDistance() 
	{
		super();
	}

	//////////////////////////////////////////////////////////////////////
	// ---------------------------------------------------- Public methods
	//////////////////////////////////////////////////////////////////////

	// IDistance interface
	
	@Override
	public double distance(IIndividual one, IIndividual other) 
	{
		// Individual genotypes
		byte [] gone   = ((BinArrayIndividual) other).getGenotype();
		byte [] gother = ((BinArrayIndividual) other).getGenotype();
		// Setting Hamming distance
		int distance = 0;
		int gl = gone.length;
		for (int i=0; i<gl; i++) {
			if (gone[i] != gother[i])
				distance++;
		}	
		// Returns hamming distance
		return (double) distance;
	}
}
