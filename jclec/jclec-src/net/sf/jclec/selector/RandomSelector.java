package net.sf.jclec.selector;

import net.sf.jclec.IIndividual;
import net.sf.jclec.ISystem;

/**
 * Random selector.
 * 
 * @author Sebastian Ventura 
 */

public class RandomSelector extends StochasticSelector 
{
	/////////////////////////////////////////////////////////////////
	// --------------------------------------- Serialization constant
	/////////////////////////////////////////////////////////////////
	
	/** Generated by Eclipse */
	
	private static final long serialVersionUID = 2451455470830922487L;
	
	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- Constructors
	/////////////////////////////////////////////////////////////////
	
	/**
	 * Empty constructor.
	 */
	
	public RandomSelector() 
	{
		super();
	}

	/**
	 * Constructor that contextualize selector
	 * 
	 * @param context Execution context
	 */
	
	public RandomSelector(ISystem context) 
	{
		super(context);
	}

	/////////////////////////////////////////////////////////////////
	// ----------------------------------------------- Public methods
	/////////////////////////////////////////////////////////////////

	// java.lang.Object methods

	@Override
	public boolean equals(Object other) 
	{
		return (other instanceof RandomSelector);
	}

	/////////////////////////////////////////////////////////////////
	// -------------------------------------------- Protected methods
	/////////////////////////////////////////////////////////////////

	// AbstractSelector methods

	/**
	 * This method does nothing.
	 */
	
	@Override
	protected void prepareSelection() 
	{
		// Do nothing
	}

	/**
	 * Selects at random an individual in source set.
	 * 
	 * @return Selected individual
	 */
	
	@Override
	protected IIndividual selectNext() 
	{
		return actsrc.get(randgen.choose(0, actsrcsz));
	}
}
